#version: '0.5'

services:
  backend-1:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-master:5432/postgres
    depends_on:
      postgres-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  backend-2:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-master:5432/postgres
    depends_on:
      postgres-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  frontend-1:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - "8080:80"
    depends_on:
      backend-1:
        condition: service_healthy
      backend-2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  frontend-2:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - "8081:80"
    depends_on:
      backend-1:
        condition: service_healthy
      backend-2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      frontend-1:
        condition: service_healthy
      frontend-2:
        condition: service_healthy
      backend-1:
        condition: service_healthy
      backend-2:
        condition: service_healthy
    networks:
      - app-network
      
  postgres-master:
    image: postgres:17.5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-master-data:/var/lib/postgresql/data
      - ./postgres/init-master.sh:/docker-entrypoint-initdb.d/init-master.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  postgres-slave:
    image: postgres:17.5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-slave-data:/var/lib/postgresql/data
      - ./postgres/init-slave.sh:/docker-entrypoint-initdb.d/init-slave.sh
    ports:
      - "5433:5432"
    depends_on:
      postgres-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres-master-data:
  postgres-slave-data:

networks:
  app-network:
    driver: bridge 